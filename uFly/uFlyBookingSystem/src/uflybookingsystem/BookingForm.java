/*
 * Initial booking form that allows you to select travel destinations and dates
 * as well as selecting the cabin class 
 */
package uflybookingsystem;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ComboBoxModel;
import uflybookingsystem.BusinessObjects.*;
import uflybookingsystem.Enumerations.*;
import javax.swing.DefaultComboBoxModel;
import java.text.SimpleDateFormat;



public class BookingForm extends javax.swing.JFrame {
    Booking booking;
    Flight flight;
    double price;
    String cabinClass;
    String flightNumber;
    String departure;
    String destination;
    String date;
    static int seatsTaken;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    public static ArrayList<Flight> flightList = new ArrayList<>();
    public static ArrayList<Location> locationList = new ArrayList<>();
    final double PRESTIGECONSTANT = 1.2;
    final double FIRSTCLASSCONSTANT = 1.35;

    /**
     * Creates new form BookingForm
     * and populates cabin class, from and to combo Boxes
     */
    public BookingForm() {
        initComponents();
        getContentPane().setBackground(Color.blue);
        createCabinClassModel();
        createToLocationsModel();
        createFromLocationsModel();
        createDatesModel();
        pnlBook.setVisible(false);
    }
    public void createCabinClassModel()
    {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for(Enum e:CabinClass.values())
        {
            model.addElement(e);
        }
        
        cboClass.setModel(model);
    }
    
    
    //Creates To model for populating the combo box based on the values in location list
    //the location selected in the from combo box should not be displayed in the to combo box
    public void createToLocationsModel(){
       DefaultComboBoxModel model = new DefaultComboBoxModel();
       ArrayList<Location> locations = new ArrayList<>();
       locations = DatabaseOperations.GetAllLocations();
       for(Location l:locations)
       {
          
           String code =l.getAirportCode();
           model.addElement(code);   
           //model.addElement(code);   
       }
        
        cboTo.setModel(model);
        
    }
    public void createFromLocationsModel(){
       DefaultComboBoxModel model = new DefaultComboBoxModel();
       ArrayList<Location> locations = new ArrayList<>();
       locations = DatabaseOperations.GetAllLocations();
       for(Location l:locations)
       {
          
           String code =l.getAirportCode();
           model.addElement(code);   
           //model.addElement(code);   
       }
        
        cboFrom.setModel(model);
        
        
    }
    
    public void stateChangeFrom()
    {
       Object o = cboFrom.getSelectedItem();
       DefaultComboBoxModel model = new DefaultComboBoxModel();
       ArrayList<Location> locations = new ArrayList<>();
       locations = DatabaseOperations.GetAllLocations();
       for(Location l:locations)
       {
          
           String code =l.getAirportCode();
           model.addElement(code);   
           //model.addElement(code);   
       }
        model.removeElement(o);
        cboTo.setModel(model);
    }
    
    
    
    //this method populate travel dates and times available to the Dates combo box 
    //based on the values selected in the To and From combo boxes
    public void createDatesModel(){
       DefaultComboBoxModel model = new DefaultComboBoxModel();
           model.addElement("");   
           cboDate.setModel(model);
           Object o = cboFrom.getSelectedItem();
           departure = (String) o;
           o =cboTo.getSelectedItem();
           destination = (String)o;
           ArrayList<Flight> allFlights = new ArrayList<>();
           allFlights = DatabaseOperations.GetAllFlights(departure, destination);
           if(allFlights.isEmpty())
           {
               model.addElement("no available flights for the selected departure and destination");
           }
           else
           {
               System.out.println("allflights siz: " + allFlights.size());
               for(Flight f: allFlights)
           {
               model.addElement(sdf.format(f.getDateTime()));
               
           }
           }
           cboDate.setModel(model);
           
           
     
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgMessage = new javax.swing.JOptionPane();
        lblTitle = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboTo = new javax.swing.JComboBox();
        cboFrom = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        pnlBook = new javax.swing.JPanel();
        cboClass = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        btnBook = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        cboDate = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(204, 255, 255));
        lblTitle.setText("Booking");

        btnSearch.setBackground(new java.awt.Color(255, 153, 102));
        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setText("To:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 255, 255));
        jLabel2.setText("From:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("Date you want to travel:");

        cboTo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboToItemStateChanged(evt);
            }
        });

        cboFrom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboFrom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboFromItemStateChanged(evt);
            }
        });

        pnlBook.setBackground(new java.awt.Color(255, 153, 102));

        cboClass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboClass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboClassItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 255));
        jLabel4.setText("Choose the class:");

        btnBook.setBackground(new java.awt.Color(0, 0, 255));
        btnBook.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBook.setForeground(new java.awt.Color(204, 255, 255));
        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBookLayout = new javax.swing.GroupLayout(pnlBook);
        pnlBook.setLayout(pnlBookLayout);
        pnlBookLayout.setHorizontalGroup(
            pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBookLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlBookLayout.createSequentialGroup()
                        .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addComponent(btnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        pnlBookLayout.setVerticalGroup(
            pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBook))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        btnClose.setBackground(new java.awt.Color(255, 153, 102));
        btnClose.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        cboDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "no times for specified locations" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addComponent(jLabel2)
                            .addComponent(cboFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(cboTo, 0, 300, Short.MAX_VALUE))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cboDate, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(cboDate))
                    .addComponent(btnSearch))
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(btnClose)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //action for the Book button that sets price, cabin class and flight number for the booking.
    //It then calculates ticket price based on the cabin class selected.
    //Lastly, the BookingFinalForm instance is created
    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        
        Object o = cboClass.getSelectedItem();
        System.out.print("Book array size = " + flightList.size() + "\n");
        for(Flight flight: flightList)
        {
            price  = flight.getPrice();
            flightNumber = flight.getFlightNumber();
            System.out.print("no class ticket is: " + price);
            seatsTaken = flight.getSeatsTaken();
            
        }
         
        if(o.toString().toLowerCase().startsWith("economy"))
        {
            cabinClass = "Economy";
            price = price;
        }
        else if(o.toString().toLowerCase().startsWith("prestige"))
        {
            cabinClass = "Prestige";
            price  = price * PRESTIGECONSTANT;
        }
        else if(o.toString().toLowerCase().startsWith("first"))
        {
            cabinClass = "First Class";
            price  = price * FIRSTCLASSCONSTANT;
        }
        booking = new Booking();
        booking.setPrice(price);
        booking.setFlightNumber(flightNumber);
        booking.setCabinClass(cabinClass);
       
        
        System.out.print("\nticket price is " + price);
        BookingFinalForm finalForm = new BookingFinalForm(booking);
        finalForm.setVisible(true);
        
        
        
        
        
        
    }//GEN-LAST:event_btnBookActionPerformed

    //every time the To combo box is updated the Date combo box should be updated
    private void cboToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboToItemStateChanged
        createDatesModel();

    }//GEN-LAST:event_cboToItemStateChanged

    //every time the From combo box is updated the Date combo box should be updated as well
    //and the To combo box should be updated listing all the locations but the one selected in the From combo box
    private void cboFromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboFromItemStateChanged
        
        stateChangeFrom();
        createDatesModel();
        
        
        
        
        
    }//GEN-LAST:event_cboFromItemStateChanged

    //Search button action performed that uncovers the Book the flight panel to select the cabin class and continue to the next form
    //also fligth should be obtained from the date combo box, as it contains flight objects
    //Then the flight information should be obtained for the flights fitting the criteria selected by user 
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        createCabinClassModel();
        try{
            Object flightObject = cboDate.getSelectedItem();
            String dateString = String.valueOf(flightObject);
            Date date = sdf.parse(dateString);
            String newDateString = sdf.format(date);
            System.out.println("new date string is: " + newDateString);
        Object o = cboFrom.getSelectedItem();
           departure = (String) o;
           o =cboTo.getSelectedItem();
           destination = (String)o;
        flightList = DatabaseOperations.GetAllFlightsForLocation(departure, destination, newDateString);
        System.out.print("Search button returns array size = " + flightList.size() + "\n");
        pnlBook.setVisible(true);
        }
        catch(Exception e)
        {
            msgMessage.showMessageDialog(this, e.toString(), "error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    //close button action
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        MainForm mainForm = new MainForm();
        this.dispose();
        mainForm.setVisible(true);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void cboClassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboClassItemStateChanged
        
    }//GEN-LAST:event_cboClassItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cboClass;
    private javax.swing.JComboBox cboDate;
    private javax.swing.JComboBox cboFrom;
    private javax.swing.JComboBox cboTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JOptionPane msgMessage;
    private javax.swing.JPanel pnlBook;
    // End of variables declaration//GEN-END:variables
}
